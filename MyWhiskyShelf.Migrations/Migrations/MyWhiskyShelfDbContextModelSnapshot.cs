// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyWhiskyShelf.Infrastructure.Persistence.Contexts;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MyWhiskyShelf.Migrations.Migrations
{
    [DbContext(typeof(MyWhiskyShelfDbContext))]
    partial class MyWhiskyShelfDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "citext");
            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "pg_trgm");
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MyWhiskyShelf.Infrastructure.Persistence.Entities.DistilleryEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<long>("FlavourProfile")
                        .HasColumnType("bigint")
                        .HasColumnName("EncodedFlavourProfile");

                    b.Property<int>("Founded")
                        .HasColumnType("integer");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("citext");

                    b.Property<string>("Owner")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("IX_Distilleries_Name_eq");

                    b.HasIndex("Owner");

                    b.HasIndex("Region");

                    b.HasIndex("Type");

                    b.ToTable("Distilleries");
                });

            modelBuilder.Entity("MyWhiskyShelf.Infrastructure.Persistence.Entities.WhiskyBottleEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("AbvPercentage")
                        .HasPrecision(4, 1)
                        .HasColumnType("numeric(4,1)");

                    b.Property<bool?>("AddedColouring")
                        .HasColumnType("boolean");

                    b.Property<int?>("BatchNumber")
                        .HasColumnType("integer");

                    b.Property<string>("Bottler")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int?>("CaskNumber")
                        .HasColumnType("integer");

                    b.Property<bool?>("ChillFiltered")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("DistilleryId")
                        .HasColumnType("uuid");

                    b.Property<string>("DistilleryName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<long>("FlavourProfile")
                        .HasColumnType("bigint")
                        .HasColumnName("EncodedFlavourProfile");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("citext");

                    b.Property<int>("Status")
                        .HasMaxLength(15)
                        .HasColumnType("integer");

                    b.Property<int>("VolumeCl")
                        .HasColumnType("integer");

                    b.Property<int>("VolumeRemainingCl")
                        .HasColumnType("integer");

                    b.Property<int?>("YearBottled")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("DistilleryName");

                    b.HasIndex("Name")
                        .HasDatabaseName("IX_WhiskyBottles_Name_eq");

                    b.HasIndex("Status");

                    b.ToTable("WhiskyBottles");
                });
#pragma warning restore 612, 618
        }
    }
}
