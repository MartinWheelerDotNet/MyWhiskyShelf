name: .NET Build and Test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4

      - name: Cache NuGet packages
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Restore dependencies
        run: dotnet restore MyWhiskyShelf.sln

      - name: Build
        run: dotnet build --configuration Release --no-restore
  
  test:
    name: ${{ matrix.name }} Tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        include:
          - name: Database
            project: MyWhiskyShelf.Database.Tests/MyWhiskyShelf.Database.Tests.csproj
          - name: DataLoader
            project: MyWhiskyShelf.DataLoader.Tests/MyWhiskyShelf.DataLoader.Tests.csproj
          - name: WebApi
            project: MyWhiskyShelf.WebApi.Tests/MyWhiskyShelf.WebApi.Tests.csproj
          - name: Integration
            project: MyWhiskyShelf.IntegrationTests/MyWhiskyShelf.IntegrationTests.csproj
            
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4

      - name: Cache NuGet packages
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Restore Dependencies
        run: dotnet restore ${{ matrix.project }}

      - name: Build solution
        run: dotnet build  ${{ matrix.project }} --configuration Release --no-restore

      - name: Setup Dev Credentials
        run: dotnet dev-certs https --trust
        if: ${{ matrix.name == 'Integration' }}

      - name: Run tests
        run: |
          dotnet test  ${{ matrix.project }} \
            --collect:"XPlat Code Coverage" \
            --results-directory ./TestResults \
            --configuration Release \
            --no-build \
            --verbosity normal

      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ matrix.name }}
          path: ./TestResults
  
  code-inspection:
    if: ${{ github.actor != 'dependabot[bot]' }}
    name: Code Inspection
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup .NET
        id: setup-dotnet
        uses: actions/setup-dotnet@v3

      - name: Cache NuGet packages
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Restore
        run: dotnet restore

      - name: Inspect code
        uses: muno92/resharper_inspectcode@v1
        with:
          solutionPath: ./MyWhiskyShelf.sln
          dotnetVersion: ${{ steps.setup-dotnet.outputs.dotnet-version }}
          noBuild: true
          extensions: ReSharperPlugin.CognitiveComplexity
  
  mutation-testing:
    if: ${{ github.actor != 'dependabot[bot]' }}
    name: ${{ matrix.name }} Mutations
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Core
            project: MyWhiskyShelf.Core.csproj
          - name: DataLoader
            project: MyWhiskyShelf.DataLoader.csproj
          - name: AppHost
            project: MyWhiskyShelf.AppHost.csproj
          - name: Database
            project: MyWhiskyShelf.Database.csproj
          - name: WebApi
            project: MyWhiskyShelf.WebApi.csproj
        
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v4

      - name: Cache NuGet packages
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Restore dependencies
        run: dotnet restore MyWhiskyShelf.sln

      - name: Setup Dev Credentials
        run: dotnet dev-certs https --trust

      - name: Install Stryker.NET tool
        run: dotnet tool install -g dotnet-stryker

      - name: Add tool path to environment
        run: echo "${HOME}/.dotnet/tools" >> $GITHUB_PATH

      - name: Run mutation tests for ${{ matrix.name }}
        env:
          STRYKER_DASHBOARD_API_KEY: ${{ secrets.STRYKER_DASHBOARD_API_KEY }}
          GITHUB_HEAD_REF: ${{ github.head_ref }}
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            echo "Running Stryker for changed files only..."
            # Create a temporary config file for the dashboard reporter
            cat <<EOF > stryker-config.json
            {
              "stryker-config": {
                "project-info": {
                  "name": "github.com/${{ github.repository }}",
                  "version": "$GITHUB_HEAD_REF",
                  "module": "${{ matrix.name }}"
                },
                "since": { "target": "${{ github.base_ref }}" }
              }
            }
          EOF
            dotnet stryker --reporter "dashboard" --project "${{ matrix.project }}" --dashboard-api-key "$STRYKER_DASHBOARD_API_KEY" --config-file "stryker-config.json" 
          else
            echo "Running full Stryker mutation testing..."
            # Create a temporary config file for the dashboard reporter
            cat <<EOF > stryker-config.json
            {
              "stryker-config": {
                "project-info": {
                  "name": "github.com/${{ github.repository }}",
                  "version": "main",
                  "module": "${{ matrix.name }}"
                }
              }
            }
          EOF
            dotnet stryker --reporter "dashboard" --project "${{ matrix.project }}" --dashboard-api-key "$STRYKER_DASHBOARD_API_KEY" --config-file "stryker-config.json"
          fi
          
  post-pr-comment:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' && github.actor != 'dependabot[bot]' }} 
    needs: mutation-testing
    permissions:
      pull-requests: write
    
    steps:
      - name: Generate Markdown and Post to PR
        uses: peter-evans/create-or-update-comment@v3
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ### Mutation Testing Results
            
            | Branch                                   | Project    | Score                                                                                                                                                                                                                                                                                                                                                                                          |
            |------------------------------------------|------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
            | ${{ steps.branch_name.outputs.branch }}  | Overall    | [![Mutation testing badge](https://img.shields.io/endpoint?style=flat&url=https%3A%2F%2Fbadge-api.stryker-mutator.io%2Fgithub.com%2FMartinWheelerDotNet%2FMyWhiskyShelf%2F${{ steps.branch_name.outputs.branch }})](https://dashboard.stryker-mutator.io/reports/github.com/MartinWheelerDotNet/MyWhiskyShelf/${{ steps.branch_name.outputs.branch }})                                         |
            |                                          | AppHost    | [![Mutation testing badge](https://img.shields.io/endpoint?style=flat&url=https%3A%2F%2Fbadge-api.stryker-mutator.io%2Fgithub.com%2FMartinWheelerDotNet%2FMyWhiskyShelf%2F${{ steps.branch_name.outputs.branch }}%3Fmodule%3DAppHost)](https://dashboard.stryker-mutator.io/reports/github.com/MartinWheelerDotNet/MyWhiskyShelf/${{ steps.branch_name.outputs.branch }}?module=AppHost)       |
            |                                          | Core       | [![Mutation testing badge](https://img.shields.io/endpoint?style=flat&url=https%3A%2F%2Fbadge-api.stryker-mutator.io%2Fgithub.com%2FMartinWheelerDotNet%2FMyWhiskyShelf%2F${{ steps.branch_name.outputs.branch }}%3Fmodule%3DCore)](https://dashboard.stryker-mutator.io/reports/github.com/MartinWheelerDotNet/MyWhiskyShelf/${{ steps.branch_name.outputs.branch }}?module=Core)             |
            |                                          | Database   | [![Mutation testing badge](https://img.shields.io/endpoint?style=flat&url=https%3A%2F%2Fbadge-api.stryker-mutator.io%2Fgithub.com%2FMartinWheelerDotNet%2FMyWhiskyShelf%2F${{ steps.branch_name.outputs.branch }}%3Fmodule%3DDatabase)](https://dashboard.stryker-mutator.io/reports/github.com/MartinWheelerDotNet/MyWhiskyShelf/${{ steps.branch_name.outputs.branch }}?module=Database)     |
            |                                          | DataLoader | [![Mutation testing badge](https://img.shields.io/endpoint?style=flat&url=https%3A%2F%2Fbadge-api.stryker-mutator.io%2Fgithub.com%2FMartinWheelerDotNet%2FMyWhiskyShelf%2F${{ steps.branch_name.outputs.branch }}%3Fmodule%3DDataLoader)](https://dashboard.stryker-mutator.io/reports/github.com/MartinWheelerDotNet/MyWhiskyShelf/${{ steps.branch_name.outputs.branch }}?module=DataLoader) |        
            |                                          | WebApi     | [![Mutation testing badge](https://img.shields.io/endpoint?style=flat&url=https%3A%2F%2Fbadge-api.stryker-mutator.io%2Fgithub.com%2FMartinWheelerDotNet%2FMyWhiskyShelf%2F${{ steps.branch_name.outputs.branch }}%3Fmodule%3DWebApi)](https://dashboard.stryker-mutator.io/reports/github.com/MartinWheelerDotNet/MyWhiskyShelf/${{ steps.branch_name.outputs.branch }}?module=WebApi) |        